/* Generated by Yosys 0.38+75 (git sha1 01d6c12af, gcc 11.4.0-1ubuntu1~22.04 -fPIC -Os) */

module UART_Transmitter(i_clock, i_TX_Start, i_TX_Byte, o_TX_Active, o_TX_Serial, o_TX_Done);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire [7:0] _153_;
  wire [7:0] _154_;
  wire [2:0] _155_;
  wire [2:0] _156_;
  wire [11:0] _157_;
  wire [2:0] _158_;
  wire _159_;
  input [7:0] i_TX_Byte;
  wire [7:0] i_TX_Byte;
  input i_TX_Start;
  wire i_TX_Start;
  input i_clock;
  wire i_clock;
  output o_TX_Active;
  wire o_TX_Active;
  output o_TX_Done;
  wire o_TX_Done;
  output o_TX_Serial;
  reg o_TX_Serial;
  reg [2:0] r_SM_main = 3'h0;
  reg r_TX_Active;
  reg r_TX_Done;
  reg [7:0] r_TX_data = 8'h00;
  reg [2:0] r_bit_index = 3'h0;
  reg [7:0] r_clock_count = 8'h00;
  sky130_fd_sc_hd__clkinv_1 _160_ (
    .A(_145_),
    .Y(_086_)
  );
  sky130_fd_sc_hd__clkinv_1 _161_ (
    .A(_133_),
    .Y(_080_)
  );
  sky130_fd_sc_hd__clkinv_1 _162_ (
    .A(_131_),
    .Y(_098_)
  );
  sky130_fd_sc_hd__clkinv_1 _163_ (
    .A(_132_),
    .Y(_099_)
  );
  sky130_fd_sc_hd__clkinv_1 _164_ (
    .A(_142_),
    .Y(_094_)
  );
  sky130_fd_sc_hd__nand2_1 _165_ (
    .A(_143_),
    .B(_142_),
    .Y(_100_)
  );
  sky130_fd_sc_hd__nand3_1 _166_ (
    .A(_143_),
    .B(_142_),
    .C(_144_),
    .Y(_101_)
  );
  sky130_fd_sc_hd__nor3_1 _167_ (
    .A(_133_),
    .B(_131_),
    .C(_099_),
    .Y(_102_)
  );
  sky130_fd_sc_hd__nand3_1 _168_ (
    .A(_080_),
    .B(_098_),
    .C(_132_),
    .Y(_103_)
  );
  sky130_fd_sc_hd__nand2_1 _169_ (
    .A(_101_),
    .B(_102_),
    .Y(_085_)
  );
  sky130_fd_sc_hd__nor2_1 _170_ (
    .A(_133_),
    .B(_098_),
    .Y(_104_)
  );
  sky130_fd_sc_hd__nand2_1 _171_ (
    .A(_132_),
    .B(_104_),
    .Y(_077_)
  );
  sky130_fd_sc_hd__nor2_1 _172_ (
    .A(_131_),
    .B(_132_),
    .Y(_105_)
  );
  sky130_fd_sc_hd__a21o_1 _173_ (
    .A1(_147_),
    .A2(_146_),
    .B1(_148_),
    .X(_106_)
  );
  sky130_fd_sc_hd__a21o_1 _174_ (
    .A1(_149_),
    .A2(_106_),
    .B1(_150_),
    .X(_107_)
  );
  sky130_fd_sc_hd__a21oi_1 _175_ (
    .A1(_151_),
    .A2(_107_),
    .B1(_152_),
    .Y(_108_)
  );
  sky130_fd_sc_hd__a211oi_1 _176_ (
    .A1(_132_),
    .A2(_108_),
    .B1(_133_),
    .C1(_131_),
    .Y(_083_)
  );
  sky130_fd_sc_hd__nor2_1 _177_ (
    .A(_077_),
    .B(_108_),
    .Y(_129_)
  );
  sky130_fd_sc_hd__nand3_1 _178_ (
    .A(_080_),
    .B(_097_),
    .C(_105_),
    .Y(_109_)
  );
  sky130_fd_sc_hd__clkinv_1 _179_ (
    .A(_109_),
    .Y(_126_)
  );
  sky130_fd_sc_hd__o21ai_0 _180_ (
    .A1(_077_),
    .A2(_108_),
    .B1(_109_),
    .Y(_081_)
  );
  sky130_fd_sc_hd__nand2_1 _181_ (
    .A(_133_),
    .B(_105_),
    .Y(_110_)
  );
  sky130_fd_sc_hd__nand2_1 _182_ (
    .A(_077_),
    .B(_110_),
    .Y(_078_)
  );
  sky130_fd_sc_hd__o22ai_1 _183_ (
    .A1(_131_),
    .A2(_132_),
    .B1(_077_),
    .B2(_108_),
    .Y(_082_)
  );
  sky130_fd_sc_hd__nor2_1 _184_ (
    .A(_133_),
    .B(_105_),
    .Y(_111_)
  );
  sky130_fd_sc_hd__nand2_1 _185_ (
    .A(_108_),
    .B(_111_),
    .Y(_084_)
  );
  sky130_fd_sc_hd__a2111o_1 _186_ (
    .A1(_151_),
    .A2(_107_),
    .B1(_133_),
    .C1(_098_),
    .D1(_152_),
    .X(_112_)
  );
  sky130_fd_sc_hd__o311ai_0 _187_ (
    .A1(_101_),
    .A2(_103_),
    .A3(_108_),
    .B1(_109_),
    .C1(_112_),
    .Y(_127_)
  );
  sky130_fd_sc_hd__nand2_1 _188_ (
    .A(_099_),
    .B(_104_),
    .Y(_113_)
  );
  sky130_fd_sc_hd__o221ai_1 _189_ (
    .A1(_099_),
    .A2(_112_),
    .B1(_113_),
    .B2(_108_),
    .C1(_103_),
    .Y(_128_)
  );
  sky130_fd_sc_hd__mux2i_1 _190_ (
    .A0(_138_),
    .A1(_139_),
    .S(_142_),
    .Y(_114_)
  );
  sky130_fd_sc_hd__nand3b_1 _191_ (
    .A_N(_142_),
    .B(_140_),
    .C(_143_),
    .Y(_115_)
  );
  sky130_fd_sc_hd__o211ai_1 _192_ (
    .A1(_143_),
    .A2(_114_),
    .B1(_115_),
    .C1(_144_),
    .Y(_116_)
  );
  sky130_fd_sc_hd__a31oi_1 _193_ (
    .A1(_143_),
    .A2(_142_),
    .A3(_141_),
    .B1(_116_),
    .Y(_117_)
  );
  sky130_fd_sc_hd__mux4_2 _194_ (
    .A0(_134_),
    .A1(_135_),
    .A2(_136_),
    .A3(_137_),
    .S0(_142_),
    .S1(_143_),
    .X(_118_)
  );
  sky130_fd_sc_hd__o21ai_0 _195_ (
    .A1(_144_),
    .A2(_118_),
    .B1(_102_),
    .Y(_119_)
  );
  sky130_fd_sc_hd__o21ai_0 _196_ (
    .A1(_117_),
    .A2(_119_),
    .B1(_077_),
    .Y(_130_)
  );
  sky130_fd_sc_hd__xor2_1 _197_ (
    .A(_145_),
    .B(_146_),
    .X(_087_)
  );
  sky130_fd_sc_hd__and3_1 _198_ (
    .A(_145_),
    .B(_147_),
    .C(_146_),
    .X(_120_)
  );
  sky130_fd_sc_hd__a21oi_1 _199_ (
    .A1(_145_),
    .A2(_146_),
    .B1(_147_),
    .Y(_121_)
  );
  sky130_fd_sc_hd__nor2_1 _200_ (
    .A(_120_),
    .B(_121_),
    .Y(_088_)
  );
  sky130_fd_sc_hd__xor2_1 _201_ (
    .A(_148_),
    .B(_120_),
    .X(_089_)
  );
  sky130_fd_sc_hd__and3_1 _202_ (
    .A(_149_),
    .B(_148_),
    .C(_120_),
    .X(_122_)
  );
  sky130_fd_sc_hd__a21oi_1 _203_ (
    .A1(_148_),
    .A2(_120_),
    .B1(_149_),
    .Y(_123_)
  );
  sky130_fd_sc_hd__nor2_1 _204_ (
    .A(_122_),
    .B(_123_),
    .Y(_090_)
  );
  sky130_fd_sc_hd__nand2_1 _205_ (
    .A(_150_),
    .B(_122_),
    .Y(_124_)
  );
  sky130_fd_sc_hd__xor2_1 _206_ (
    .A(_150_),
    .B(_122_),
    .X(_091_)
  );
  sky130_fd_sc_hd__nand3_1 _207_ (
    .A(_151_),
    .B(_150_),
    .C(_122_),
    .Y(_125_)
  );
  sky130_fd_sc_hd__xnor2_1 _208_ (
    .A(_151_),
    .B(_124_),
    .Y(_092_)
  );
  sky130_fd_sc_hd__xnor2_1 _209_ (
    .A(_152_),
    .B(_125_),
    .Y(_093_)
  );
  sky130_fd_sc_hd__xor2_1 _210_ (
    .A(_143_),
    .B(_142_),
    .X(_095_)
  );
  sky130_fd_sc_hd__xnor2_1 _211_ (
    .A(_144_),
    .B(_100_),
    .Y(_096_)
  );
  sky130_fd_sc_hd__clkinv_1 _212_ (
    .A(_133_),
    .Y(_079_)
  );
  always @(posedge i_clock)
    if (_004_) r_TX_Active <= _000_;
  always @(posedge i_clock)
    if (_002_)
      if (_007_) r_clock_count[0] <= 1'h0;
      else r_clock_count[0] <= _153_[0];
  always @(posedge i_clock)
    if (_002_)
      if (_007_) r_clock_count[1] <= 1'h0;
      else r_clock_count[1] <= _154_[1];
  always @(posedge i_clock)
    if (_002_)
      if (_007_) r_clock_count[2] <= 1'h0;
      else r_clock_count[2] <= _154_[2];
  always @(posedge i_clock)
    if (_002_)
      if (_007_) r_clock_count[3] <= 1'h0;
      else r_clock_count[3] <= _154_[3];
  always @(posedge i_clock)
    if (_002_)
      if (_007_) r_clock_count[4] <= 1'h0;
      else r_clock_count[4] <= _154_[4];
  always @(posedge i_clock)
    if (_002_)
      if (_007_) r_clock_count[5] <= 1'h0;
      else r_clock_count[5] <= _154_[5];
  always @(posedge i_clock)
    if (_002_)
      if (_007_) r_clock_count[6] <= 1'h0;
      else r_clock_count[6] <= _154_[6];
  always @(posedge i_clock)
    if (_002_)
      if (_007_) r_clock_count[7] <= 1'h0;
      else r_clock_count[7] <= _154_[7];
  always @(posedge i_clock)
    if (_006_)
      if (_008_) r_bit_index[0] <= 1'h0;
      else r_bit_index[0] <= _155_[0];
  always @(posedge i_clock)
    if (_006_)
      if (_008_) r_bit_index[1] <= 1'h0;
      else r_bit_index[1] <= _156_[1];
  always @(posedge i_clock)
    if (_006_)
      if (_008_) r_bit_index[2] <= 1'h0;
      else r_bit_index[2] <= _156_[2];
  always @(posedge i_clock)
    r_SM_main[0] <= _158_[0];
  always @(posedge i_clock)
    r_SM_main[1] <= _158_[1];
  always @(posedge i_clock)
    r_SM_main[2] <= _158_[2];
  always @(posedge i_clock)
    if (_003_) o_TX_Serial <= _159_;
  always @(posedge i_clock)
    if (_157_[9]) r_TX_data[0] <= i_TX_Byte[0];
  always @(posedge i_clock)
    if (_157_[9]) r_TX_data[1] <= i_TX_Byte[1];
  always @(posedge i_clock)
    if (_157_[9]) r_TX_data[2] <= i_TX_Byte[2];
  always @(posedge i_clock)
    if (_157_[9]) r_TX_data[3] <= i_TX_Byte[3];
  always @(posedge i_clock)
    if (_157_[9]) r_TX_data[4] <= i_TX_Byte[4];
  always @(posedge i_clock)
    if (_157_[9]) r_TX_data[5] <= i_TX_Byte[5];
  always @(posedge i_clock)
    if (_157_[9]) r_TX_data[6] <= i_TX_Byte[6];
  always @(posedge i_clock)
    if (_157_[9]) r_TX_data[7] <= i_TX_Byte[7];
  always @(posedge i_clock)
    if (_005_) r_TX_Done <= _001_;
  assign _154_[0] = _153_[0];
  assign _155_[2:1] = r_bit_index[2:1];
  assign _156_[0] = _155_[0];
  assign { _157_[11:10], _157_[8], _157_[5], _157_[0] } = { 4'h0, _157_[1] };
  assign o_TX_Active = r_TX_Active;
  assign o_TX_Done = r_TX_Done;
  assign _145_ = r_clock_count[0];
  assign _153_[0] = _086_;
  assign _133_ = r_SM_main[2];
  assign _131_ = r_SM_main[0];
  assign _132_ = r_SM_main[1];
  assign _143_ = r_bit_index[1];
  assign _142_ = r_bit_index[0];
  assign _144_ = r_bit_index[2];
  assign _008_ = _085_;
  assign _000_ = _077_;
  assign _152_ = r_clock_count[7];
  assign _151_ = r_clock_count[6];
  assign _150_ = r_clock_count[5];
  assign _149_ = r_clock_count[4];
  assign _148_ = r_clock_count[3];
  assign _147_ = r_clock_count[2];
  assign _146_ = r_clock_count[1];
  assign _006_ = _083_;
  assign _097_ = i_TX_Start;
  assign _004_ = _081_;
  assign _001_ = _078_;
  assign _005_ = _082_;
  assign _003_ = _080_;
  assign _007_ = _084_;
  assign _002_ = _079_;
  assign _157_[9] = _126_;
  assign _158_[0] = _127_;
  assign _158_[1] = _128_;
  assign _158_[2] = _129_;
  assign _134_ = r_TX_data[0];
  assign _135_ = r_TX_data[1];
  assign _136_ = r_TX_data[2];
  assign _137_ = r_TX_data[3];
  assign _138_ = r_TX_data[4];
  assign _139_ = r_TX_data[5];
  assign _140_ = r_TX_data[6];
  assign _141_ = r_TX_data[7];
  assign _159_ = _130_;
  assign _155_[0] = _094_;
  assign _154_[1] = _087_;
  assign _154_[2] = _088_;
  assign _154_[3] = _089_;
  assign _154_[4] = _090_;
  assign _154_[5] = _091_;
  assign _154_[6] = _092_;
  assign _154_[7] = _093_;
  assign _156_[1] = _095_;
  assign _156_[2] = _096_;
endmodule
